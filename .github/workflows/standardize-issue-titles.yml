name: Standardize Issue Titles

on:
  workflow_dispatch:  # Allows manual triggering

jobs:
  standardize-titles:
    runs-on: ubuntu-latest
    permissions:
      issues: write
    
    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install PyGithub

      - name: Create standardization script
        run: |
          cat > standardize_titles.py << 'EOF'
          import os
          import time
          from github import Github

          # Authentication
          token = os.environ.get("GITHUB_TOKEN")
          g = Github(token)

          # Repository details
          repo_owner = os.environ.get("REPO_OWNER")
          repo_name = os.environ.get("REPO_NAME")
          repo = g.get_repo(f"{repo_owner}/{repo_name}")

          # Issue updates mapping
          issue_updates = [
              {"number": 138, "title": "Open Source Friday - Nuxt and AI - [05-23-2025]"},
              {"number": 137, "title": "Open Source Friday - SupermemoryAI - [05-16-2025]"},
              {"number": 136, "title": "Open Source Friday - Effection - [TBD]"},
              {"number": 135, "title": "Open Source Friday - Cluecumber - [TBD]"},
              {"number": 133, "title": "Open Source Friday with OSPO - Td Bank - [04-04-2025]"},
              {"number": 129, "title": "Open Source Friday - supervision - [03-28-2025]"},
              {"number": 127, "title": "Open Source Friday - Convex - [05-09-2025]"},
              {"number": 125, "title": "Open Source Friday - Dagger AI Agents - [TBD]"},
              {"number": 117, "title": "Open Source Friday - Oqtane - [04-11-2025]"},
              {"number": 116, "title": "Open Source Friday - Daytona - [04-18-2025]"},
              {"number": 115, "title": "Open Source Friday - Ushahidi - [TBD]"},
              {"number": 111, "title": "Open Source Friday - Connecting Workers and Public AI - [TBD]"}
          ]

          # Update each issue
          for update in issue_updates:
              try:
                  issue_number = update["number"]
                  new_title = update["title"]
                  
                  print(f"Updating issue #{issue_number} with title: {new_title}")
                  issue = repo.get_issue(issue_number)
                  issue.edit(title=new_title)
                  print(f"Successfully updated issue #{issue_number}")
                  
                  # Add a short delay to avoid rate limiting
                  time.sleep(1)
              except Exception as e:
                  print(f"Error updating issue #{issue_number}: {str(e)}")
          EOF

      - name: Run standardization script
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO_OWNER: githubevents
          REPO_NAME: open-source-friday
        run: python standardize_titles.py
